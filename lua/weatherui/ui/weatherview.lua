CGUI.RegisterControl ("WeatherView", function ()	local self = CGUI.CreateControl ("BasePanel")	self.List = vgui.Create ("DPanelList", self)	self.List:EnableVerticalScrollbar (true)		self.Items = {}	self.SelectedItem = nil		self:AddLayouter (function (self)		self.List:SetPos (0, 0)		self.List:SetSize (self:GetWide (), self:GetTall ())	end)		function self:AddItem (item)		local control = CGUI.CreateControl ("WeatherItem", item)		self.List:AddItem (control)		self.Items [item:GetID ()] = control				control:AddEventListener ("Selected", function (control)			self:Select (control)		end)	end		function self:Clear ()		self.Items = {}		self:Select (nil)	end		function self:GetSelectedItem ()		return self.SelectedItem	end		function self:MoveItemUp (id)		local previous = self.Items [id - 1]		local current = self.Items [id]		self.Items [id - 1] = current		self.Items [id] = previous				local previousid = 0		local nextid = 0		for k, v in pairs (self.List:GetItems ()) do			if v == previous then				previousid = k			end			if v == current then				nextid = k			end		end		self.List:GetItems () [previousid] = current		self.List:GetItems () [nextid] = previous		self.List:PerformLayout ()	end		function self:RemoveItem (item)		local control = self.Items [item:GetID ()]		if not control then			return		end		if control == self:GetSelectedItem () then			self:Select (nil)		end		self.List:RemoveItem (control)		table.remove (self.Items, item:GetID ())				control:RemoveEventListener ("Selected", control)	end		function self:Select (item)		if self.SelectedItem == item then			return		end		if self.SelectedItem then			self.SelectedItem:Deselect ()		end		self.SelectedItem = item		self:DispatchEvent ("SelectionChanged", item)	end		function self:UpdateItem (item)		local control = self.Items [item:GetID ()]		if not control then			return		end		control:Update ()	end		return selfend)